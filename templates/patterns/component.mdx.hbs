---
description: ""
icon:
status: Draft
---

import { BrowserSupport } from "@app/_components/browser-support";

# {{name}}

## Overview

**{{name}}s** are [brief description of the component].

## Use Cases

### When to use:

**Common scenarios include:**

- [Use case 1]
- [Use case 2]
- [Use case 3]

### When not to use:

- [Anti-pattern 1]
- [Anti-pattern 2]
- [Anti-pattern 3]

## Benefits

- [Benefit 1]
- [Benefit 2]
- [Benefit 3]

## Anatomy

```mermaid
flowchart TB
subgraph {{name}}[{{name}} Navigation]
A[Component Part 1] -.->|relation| B[Component Part 2]
B -.->|relation| C[Component Part 3]

classDef container stroke:#666,stroke-width:2px
class {{name}} container
end
```

### Component Structure

1. **Container**

## Best Practices

### Content
**Do's ✅**
- [Best practice 1]
- [Best practice 2]

**Don'ts ❌**
- [Anti-pattern 1]
- [Anti-pattern 2]

### Accessibility & UX
**Do's ✅**
- [Best practice 1]
- [Best practice 2]

**Don'ts ❌**
- [Anti-pattern 1]
- [Anti-pattern 2]

### Visual Design
**Do's ✅**
- [Best practice 1]
- [Best practice 2]

**Don'ts ❌**
- [Anti-pattern 1]
- [Anti-pattern 2]

### Layout & Positioning
**Do's ✅**
- [Best practice 1]
- [Best practice 2]

**Don'ts ❌**
- [Anti-pattern 1]
- [Anti-pattern 2]

## Code Examples

### Basic Implementation
```html
<!-- Basic implementation example -->
```
## Accessibility

### ARIA Attributes

**Required ARIA attributes:**
- [Required ARIA attribute 1]
- [Required ARIA attribute 2]

### Keyboard Interaction Pattern

The following table outlines the standard keyboard interactions for {{name}} components.

| Key         | Action                                                                                           |
| ----------- | ------------------------------------------------------------------------------------------------ |
| Tab         | xxxxxxx        |


## SEO

- [SEO consideration 1]
- [SEO consideration 2]

## Testing Guidelines

### Functional Testing

**Should ✓**

- [ ] Test case 1
- [ ] Test case 2

## Browser Support

<BrowserSupport features={[]} />

## Design Tokens

These design tokens follow the [Design Tokens Format](https://design-tokens.github.io/community-group/format/) specification and can be used with various token transformation tools to generate platform-specific variables.

### {{name}} Tokens in DTF Format

```json:{{path}}.json
{
  "$schema": "https://design-tokens.org/schema.json",
  "{{name}}": {}
}
```

## Related Patterns

Consider these related patterns when implementing {{name}}:

- [Pattern 1](/patterns/category/pattern-1) - Brief explanation of relationship
- [Pattern 2](/patterns/category/pattern-2) - Brief explanation of relationship
- [Pattern 3](/patterns/category/pattern-3) - Brief explanation of relationship

## Resources

### Articles

- [Resource 1]
- [Resource 2]

### Documentation

- [Documentation 1]
- [Documentation 2]

### Libraries

- [Library 1]
- [Library 2]

